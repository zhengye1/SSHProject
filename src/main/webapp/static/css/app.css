html{
	background-color:#2F2F2F;
}

body{
	height: 100%;
	background-color:rgb(245, 245, 245);
}


#mainWrapper {
	height: 100%;
	background-image: -webkit-gradient(
	linear,
	right bottom,
	right top,
	color-stop(0, #EDEDED),
	color-stop(0.08, #EAEAEA),
	color-stop(1, #2F2F2F),
	color-stop(1, #AAAAAA)
);
background-image: -o-linear-gradient(top, #EDEDED 0%, #EAEAEA 8%, #2F2F2F 100%, #AAAAAA 100%);
background-image: -moz-linear-gradient(top, #EDEDED 0%, #EAEAEA 8%, #2F2F2F 100%, #AAAAAA 100%);
background-image: -webkit-linear-gradient(top, #EDEDED 0%, #EAEAEA 8%, #2F2F2F 100%, #AAAAAA 100%);
background-image: -ms-linear-gradient(top, #EDEDED 0%, #EAEAEA 8%, #2F2F2F 100%, #AAAAAA 100%);
background-image: linear-gradient(to top, #EDEDED 0%, #EAEAEA 8%, #2F2F2F 100%, #AAAAAA 100%);
}

.floatRight{
	float:right;
	margin-right: 18px;
}

.has-error{
	color:red;
}

.generic-container {
  position:fixed;
  width:80%;
  margin-left: 20px;
  margin-top: 20px;
  margin-bottom: 20px;
  padding: 20px;
  background-color: #EAE7E7;
  border: 1px solid #ddd;
  border-radius: 4px;
  box-shadow: 0 0 30px black;
}

.custom-width {
    width: 80px !important;
}

body, #mainWrapper, .form-control{
	font-size:12px!important;
}

#mainWrapper {
	/*height: 720px; Without explicit px values, % in children's does not work*/
	height: 100vh; /*with Viewport-Percentage, we can handles all devices screens  */
	padding-left:10px;
	padding-right:10px;
	padding-bottom:10px;
}

.login-container {
    margin-top: 100px;
    background-color: floralwhite;
    width: 40%;
    left: 30%;
    position: absolute;
}

.login-card {
    width: 80%;
    margin: auto;
}

.login-form {
    padding: 10%;
}

.authbar{
	margin-bottom:15px;
}

/*
Force table width to 100%
*/
table.table-hover {
  width: 100%;
}

/*
Set table elements to block mode.  (Normally they are inline).
This allows a responsive table, such as one where columns can be stacked
if the display is narrow.
*/
table.table-hover,
table.table-hover>thead,
table.table-hover>tbody,
table.table-hover>thead>tr,
table.table-hover>tbody>tr,
table.table-hover>thead>tr>th,
table.table-hover>tbody>td {
  display: block;
}


table.table-hover>thead>tr:after,
table.table-hover>tbody>tr:after {
  content: ' ';
  display: block;
  visibility: hidden;
  clear: both;
}

/*
When scrolling the table, actually it is only the tbody portion of the
table that scrolls (not the entire table: we want the thead to remain
fixed).  We must specify an explicit height for the tbody.  We include
100px as a default, but it can be overridden elsewhere.

Also, we force the scrollbar to always be displayed so that the usable
width for the table contents doesn't change (such as becoming narrower
when a scrollbar is visible and wider when it is not).
*/
table.table-hover>tbody {
  overflow-y: scroll;
  height: 300px;
}

/*
We really don't want to scroll the thead contents, but we want to force
a scrollbar to be displayed anyway so that the usable width of the thead
will exactly match the tbody.
*/
table.table-hover>thead {        
  overflow-y: scroll;
}

/*
For browsers that support it (webkit), we set the background color of
the unneeded scrollbar in the thead to make it invisible.  (Setting
visiblity: hidden defeats the purpose, as this alters the usable width
of the thead.)
*/
table.table-hover>thead::-webkit-scrollbar{
  background-color: inherit;
}

/*
We want to set <th> and <td> elements to float left.
We also must explicitly set the width for each column (both for the <th>
and the <td>).  We set to 20% here a default placeholder, but it can be
overridden elsewhere.
*/
table.table-hover>thead>tr>th,
table.table-hover>tbody>tr>td {
        float: left;
}